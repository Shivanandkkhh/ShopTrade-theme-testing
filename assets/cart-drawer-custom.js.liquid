const submitForm = document.querySelectorAll('form[action="/cart/add"]');
const cartItemsTotal = document.querySelectorAll('[data-cart]');
const cartDrawerBar = document.querySelector('.cart-container-custom');
let sbumitFormButton = submitForm.forEach( (button) =>{ 

});

async function updateCartItem() {
    let cartItem = await fetch(window.Shopify.routes.root + 'cart.js');
    let itemCount = await cartItem.json();
    let count = itemCount.item_count;
    cartItemsTotal.forEach((e) => {
        e.textContent = count;
    })
}
async function updateCart(){
    let cartDrawer =  await fetch('/?section=cart-drawer-custom');
    let  text  = await cartDrawer.text();
    let html = document.createElement('div');
    html.innerHTML = text;

    let oldBox = document.querySelector('.cart-container-custom');
    let newBox = html.querySelector('.cart-container-custom');
    oldBox.innerHTML = newBox.innerHTML;

    
     addToCartEvent();
     let closeButton = document.querySelectorAll('[data-close-button]');
     let closeDrawer = document.querySelector('.cart-container-custom');
     closeButton.forEach( (e)=>{
        e.addEventListener('click', ()=>{
            closeDrawer.style.display = 'none';
        });
     });

     document.addEventListener('click', ()=>{
        if(!closeDrawer.contains(event.target) && event.target !== sbumitFormButton){
         closeDrawer.style.display = 'none';
        }
     })

}

 function addToCartEvent(){
    const quantityNumber = document.querySelectorAll('[data-cart-quantity] button');

    quantityNumber.forEach ( (button)=>{
        button.addEventListener('click', async (e)=>{
            let rootItem = button.parentElement.parentElement;
            const key = rootItem.getAttribute('data-line-item-key');

           

            let inputValue = Number( button.parentElement.querySelector('input').value);
            console.log('rootItem',inputValue);
            let isPlus = button.classList.contains('cart-drawer_quantity_selector_plus');
            let updatedQuantity = isPlus ? inputValue + 1 : inputValue - 1;

            await fetch(window.Shopify.routes.root + 'cart/update.js', {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ updates: { [key]: updatedQuantity } }),
            });

            updateCart();
        });
    });
}


submitForm.forEach((form) => {
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        await fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: "POST",
            body: new FormData(form),
        });
        cartDrawerBar.style.display = 'grid';
        updateCartItem()
        updateCart();

    });
}); 



 ///// cart change js